spring:
  application:
    name: spring-redis-poc
  data:
    redis:
      host: ${/poc/redis/endpoint}
      port: ${/poc/redis/port:6379}
      timeout: 10s
      connect-timeout: 5s
      lettuce:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 5
          max-wait: 5s
        shutdown-timeout: 5s
  session:
    store-type: redis
    redis:
      namespace: "poc:session:prod"
      flush-mode: on_save
    timeout: 60m
  cloud:
    aws:
      parameterstore:
        enabled: true
        prefix: /poc

server:
  port: 8080
  servlet:
    session:
      timeout: 60m
  forward-headers-strategy: framework

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      cors:
        allowed-origins: "*"
        allowed-methods: GET,POST,PUT,DELETE,OPTIONS
        allowed-headers: "*"
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      cloudwatch:
        enabled: true
        namespace: POC/SpringRedis/Production
        step: 1m

logging:
  level:
    com.poc: INFO
    org.springframework.session: WARN
    org.springframework.web: WARN
    io.lettuce.core: WARN
    root: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{traceId}] %logger{36} - %msg%n"

poc:
  cache:
    anti-cache-enabled: true
    default-headers:
      - "Cache-Control: no-cache, no-store, must-revalidate"
      - "Pragma: no-cache"
      - "Expires: 0"
