spring:
  application:
    name: spring-redis-poc
  
  data:
    redis:
      host: ${SPRING_REDIS_HOST:localhost}
      port: ${SPRING_REDIS_PORT:6379}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
  
  session:
    store-type: redis
    redis:
      namespace: "poc:session"
      flush-mode: on_save
    timeout: 30m

server:
  port: 8080
  servlet:
    session:
      timeout: 30m
  # Headers anti-cache globais
  forward-headers-strategy: framework

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      cors:
        allowed-origins: "*"
        allowed-methods: GET,POST,PUT,DELETE,OPTIONS
        allowed-headers: "*"
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      cloudwatch:
        enabled: true
        namespace: POC/SpringRedis
        step: 1m

logging:
  level:
    com.poc: INFO
    org.springframework.session: DEBUG
    org.springframework.web: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{traceId}] %logger{36} - %msg%n"

# Configurações customizadas para POC
poc:
  cache:
    # Estratégias anti-cache habilitadas
    anti-cache-enabled: true
    # Headers anti-cache padrão
    default-headers:
      - "Cache-Control: no-cache, no-store, must-revalidate"
      - "Pragma: no-cache"
      - "Expires: 0"
