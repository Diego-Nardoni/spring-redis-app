spring:
  application:
    name: spring-redis-poc
  
  # Configuração resiliente do Redis
  data:
    redis:
      # Usar Service Discovery ou Parameter Store
      host: ${SPRING_REDIS_HOST:#{systemProperties['redis.endpoint'] ?: 'poc-redis-01ndkd.serverless.use1.cache.amazonaws.com'}}
      port: ${SPRING_REDIS_PORT:6379}
      timeout: 2000ms
      connect-timeout: 1000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 2
          max-wait: 2000ms
        shutdown-timeout: 100ms
        # Configurações de resiliência
        cluster:
          refresh:
            adaptive: true
            period: 30s

# Circuit Breaker para Redis
resilience4j:
  circuitbreaker:
    instances:
      redis:
        failure-rate-threshold: 50
        wait-duration-in-open-state: 10s
        sliding-window-size: 10
        minimum-number-of-calls: 5
        permitted-number-of-calls-in-half-open-state: 3
  
  retry:
    instances:
      redis:
        max-attempts: 3
        wait-duration: 1s
        exponential-backoff-multiplier: 2

# Cache local como fallback
spring:
  cache:
    type: caffeine
    caffeine:
      spec: maximumSize=1000,expireAfterWrite=10m
