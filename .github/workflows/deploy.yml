name: Deploy to ECS

on:
  push:
    branches: [ main ]

env:
  ECR_REPOSITORY: spring-redis-app
  ECS_SERVICE: poc-spring-redis-service
  ECS_CLUSTER: poc-cluster

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ${{ secrets.AWS_REGION || 'us-east-1' }}

    - name: Get AWS Account ID and Region
      id: aws-info
      run: |
        echo "account_id=$(aws sts get-caller-identity --query Account --output text)" >> $GITHUB_OUTPUT
        echo "region=$(aws configure get region)" >> $GITHUB_OUTPUT

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

    - name: Prepare dynamic task definition
      env:
        AWS_ACCOUNT_ID: ${{ steps.aws-info.outputs.account_id }}
        AWS_REGION: ${{ steps.aws-info.outputs.region }}
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Replace placeholders with actual values
        envsubst < task-definition.json > task-definition-resolved.json

        # Update image tag
        sed -i "s|:latest|:${IMAGE_TAG}|g" task-definition-resolved.json

    - name: Update task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition-resolved.json
        container-name: spring-redis-app
        image: ${{ steps.login-ecr.outputs.registry }}/spring-redis-app:${{ github.sha }}

    - name: Deploy to ECS
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true